# AUTOGENERATED FILE - DO NOT MODIFY!
# This file generated by Djinni from lapse.djinni
---
name: lapse_capture_quick_mode
typedef: 'record'
params: []
prefix: lapse_
cpp:
  typename: '::lpase::CaptureQuickMode'
  header: '"capture_quick_mode.hpp"'
  byValue: false
objc:
  typename: 'LPACaptureQuickMode'
  pointer: true
  hash: '%s.hash'
  boxed: 'LPACaptureQuickMode'
  header: '"LPACaptureQuickMode.h"'
objcpp:
  translator: '::djinni_generated::CaptureQuickMode'
  header: '"LPACaptureQuickMode+Private.h"'
java:
  reference: true
  typename: 'dyno.fun.lapse.CaptureQuickMode'
  generic: true
  hash: '%s.hashCode()'
  boxed: 'dyno.fun.lapse.CaptureQuickMode'
jni:
  translator: '::djinni_generated::NativeCaptureQuickMode'
  header: '"NativeCaptureQuickMode.hpp"'
  typename: jobject
  typeSignature: 'Ldyno/fun/lapse/CaptureQuickMode;'
---
name: lapse_config_key_value
typedef: 'record'
params: []
prefix: lapse_
cpp:
  typename: '::lpase::ConfigKeyValue'
  header: '"config_key_value.hpp"'
  byValue: false
objc:
  typename: 'LPAConfigKeyValue'
  pointer: true
  hash: '%s.hash'
  boxed: 'LPAConfigKeyValue'
  header: '"LPAConfigKeyValue.h"'
objcpp:
  translator: '::djinni_generated::ConfigKeyValue'
  header: '"LPAConfigKeyValue+Private.h"'
java:
  reference: true
  typename: 'dyno.fun.lapse.ConfigKeyValue'
  generic: true
  hash: '%s.hashCode()'
  boxed: 'dyno.fun.lapse.ConfigKeyValue'
jni:
  translator: '::djinni_generated::NativeConfigKeyValue'
  header: '"NativeConfigKeyValue.hpp"'
  typename: jobject
  typeSignature: 'Ldyno/fun/lapse/ConfigKeyValue;'
---
name: lapse_data_gen
typedef: 'interface +c'
params: []
prefix: lapse_
cpp:
  typename: '::lpase::DataGen'
  header: '"data_gen.hpp"'
  byValue: false
objc:
  typename: 'LPADataGen'
  pointer: true
  hash: '%s.hash'
  boxed: 'LPADataGen'
  header: '"LPADataGen.h"'
objcpp:
  translator: '::djinni_generated::DataGen'
  header: '"LPADataGen+Private.h"'
java:
  reference: true
  typename: 'dyno.fun.lapse.DataGen'
  generic: true
  hash: '%s.hashCode()'
  boxed: 'dyno.fun.lapse.DataGen'
jni:
  translator: '::djinni_generated::NativeDataGen'
  header: '"NativeDataGen.hpp"'
  typename: jobject
  typeSignature: 'Ldyno/fun/lapse/DataGen;'
---
name: lapse_interval_mode
typedef: 'enum'
params: []
prefix: lapse_
cpp:
  typename: '::lpase::IntervalMode'
  header: '"interval_mode.hpp"'
  byValue: true
objc:
  typename: 'LPAIntervalMode'
  pointer: false
  hash: '%s.hash'
  boxed: 'NSNumber'
  header: '"LPAIntervalMode.h"'
objcpp:
  translator: '::djinni::Enum<::lpase::IntervalMode, LPAIntervalMode>'
  header: '"DJIMarshal+Private.h"'
java:
  reference: true
  typename: 'dyno.fun.lapse.IntervalMode'
  generic: true
  hash: '%s.hashCode()'
  boxed: 'dyno.fun.lapse.IntervalMode'
jni:
  translator: '::djinni_generated::NativeIntervalMode'
  header: '"NativeIntervalMode.hpp"'
  typename: jobject
  typeSignature: 'Ldyno/fun/lapse/IntervalMode;'
---
name: lapse_lapse_event
typedef: 'enum'
params: []
prefix: lapse_
cpp:
  typename: '::lpase::LapseEvent'
  header: '"lapse_event.hpp"'
  byValue: true
objc:
  typename: 'LPALapseEvent'
  pointer: false
  hash: '%s.hash'
  boxed: 'NSNumber'
  header: '"LPALapseEvent.h"'
objcpp:
  translator: '::djinni::Enum<::lpase::LapseEvent, LPALapseEvent>'
  header: '"DJIMarshal+Private.h"'
java:
  reference: true
  typename: 'dyno.fun.lapse.LapseEvent'
  generic: true
  hash: '%s.hashCode()'
  boxed: 'dyno.fun.lapse.LapseEvent'
jni:
  translator: '::djinni_generated::NativeLapseEvent'
  header: '"NativeLapseEvent.hpp"'
  typename: jobject
  typeSignature: 'Ldyno/fun/lapse/LapseEvent;'
---
name: lapse_lapse_setting_dlg_delegate
typedef: 'interface +o +j'
params: []
prefix: lapse_
cpp:
  typename: '::lpase::LapseSettingDlgDelegate'
  header: '"lapse_setting_dlg_delegate.hpp"'
  byValue: false
objc:
  typename: 'LPALapseSettingDlgDelegate'
  pointer: true
  hash: '%s.hash'
  boxed: 'LPALapseSettingDlgDelegate'
  header: '"LPALapseSettingDlgDelegate.h"'
objcpp:
  translator: '::djinni_generated::LapseSettingDlgDelegate'
  header: '"LPALapseSettingDlgDelegate+Private.h"'
java:
  reference: true
  typename: 'dyno.fun.lapse.LapseSettingDlgDelegate'
  generic: true
  hash: '%s.hashCode()'
  boxed: 'dyno.fun.lapse.LapseSettingDlgDelegate'
jni:
  translator: '::djinni_generated::NativeLapseSettingDlgDelegate'
  header: '"NativeLapseSettingDlgDelegate.hpp"'
  typename: jobject
  typeSignature: 'Ldyno/fun/lapse/LapseSettingDlgDelegate;'
---
name: lapse_lapse_setting_dlg_gen
typedef: 'interface +c'
params: []
prefix: lapse_
cpp:
  typename: '::lpase::LapseSettingDlgGen'
  header: '"lapse_setting_dlg_gen.hpp"'
  byValue: false
objc:
  typename: 'LPALapseSettingDlgGen'
  pointer: true
  hash: '%s.hash'
  boxed: 'LPALapseSettingDlgGen'
  header: '"LPALapseSettingDlgGen.h"'
objcpp:
  translator: '::djinni_generated::LapseSettingDlgGen'
  header: '"LPALapseSettingDlgGen+Private.h"'
java:
  reference: true
  typename: 'dyno.fun.lapse.LapseSettingDlgGen'
  generic: true
  hash: '%s.hashCode()'
  boxed: 'dyno.fun.lapse.LapseSettingDlgGen'
jni:
  translator: '::djinni_generated::NativeLapseSettingDlgGen'
  header: '"NativeLapseSettingDlgGen.hpp"'
  typename: jobject
  typeSignature: 'Ldyno/fun/lapse/LapseSettingDlgGen;'
---
name: lapse_lapse_setting_gen
typedef: 'interface +c'
params: []
prefix: lapse_
cpp:
  typename: '::lpase::LapseSettingGen'
  header: '"lapse_setting_gen.hpp"'
  byValue: false
objc:
  typename: 'LPALapseSettingGen'
  pointer: true
  hash: '%s.hash'
  boxed: 'LPALapseSettingGen'
  header: '"LPALapseSettingGen.h"'
objcpp:
  translator: '::djinni_generated::LapseSettingGen'
  header: '"LPALapseSettingGen+Private.h"'
java:
  reference: true
  typename: 'dyno.fun.lapse.LapseSettingGen'
  generic: true
  hash: '%s.hashCode()'
  boxed: 'dyno.fun.lapse.LapseSettingGen'
jni:
  translator: '::djinni_generated::NativeLapseSettingGen'
  header: '"NativeLapseSettingGen.hpp"'
  typename: jobject
  typeSignature: 'Ldyno/fun/lapse/LapseSettingGen;'
---
name: lapse_lapse_setting_ui_gen
typedef: 'interface +o +j'
params: []
prefix: lapse_
cpp:
  typename: '::lpase::LapseSettingUiGen'
  header: '"lapse_setting_ui_gen.hpp"'
  byValue: false
objc:
  typename: 'LPALapseSettingUiGen'
  pointer: true
  hash: '%s.hash'
  boxed: 'LPALapseSettingUiGen'
  header: '"LPALapseSettingUiGen.h"'
objcpp:
  translator: '::djinni_generated::LapseSettingUiGen'
  header: '"LPALapseSettingUiGen+Private.h"'
java:
  reference: true
  typename: 'dyno.fun.lapse.LapseSettingUiGen'
  generic: true
  hash: '%s.hashCode()'
  boxed: 'dyno.fun.lapse.LapseSettingUiGen'
jni:
  translator: '::djinni_generated::NativeLapseSettingUiGen'
  header: '"NativeLapseSettingUiGen.hpp"'
  typename: jobject
  typeSignature: 'Ldyno/fun/lapse/LapseSettingUiGen;'
---
name: lapse_lapse_ui_scene
typedef: 'enum'
params: []
prefix: lapse_
cpp:
  typename: '::lpase::LapseUiScene'
  header: '"lapse_ui_scene.hpp"'
  byValue: true
objc:
  typename: 'LPALapseUiScene'
  pointer: false
  hash: '%s.hash'
  boxed: 'NSNumber'
  header: '"LPALapseUiScene.h"'
objcpp:
  translator: '::djinni::Enum<::lpase::LapseUiScene, LPALapseUiScene>'
  header: '"DJIMarshal+Private.h"'
java:
  reference: true
  typename: 'dyno.fun.lapse.LapseUiScene'
  generic: true
  hash: '%s.hashCode()'
  boxed: 'dyno.fun.lapse.LapseUiScene'
jni:
  translator: '::djinni_generated::NativeLapseUiScene'
  header: '"NativeLapseUiScene.hpp"'
  typename: jobject
  typeSignature: 'Ldyno/fun/lapse/LapseUiScene;'
---
name: lapse_logic_gen
typedef: 'interface +c'
params: []
prefix: lapse_
cpp:
  typename: '::lpase::LogicGen'
  header: '"logic_gen.hpp"'
  byValue: false
objc:
  typename: 'LPALogicGen'
  pointer: true
  hash: '%s.hash'
  boxed: 'LPALogicGen'
  header: '"LPALogicGen.h"'
objcpp:
  translator: '::djinni_generated::LogicGen'
  header: '"LPALogicGen+Private.h"'
java:
  reference: true
  typename: 'dyno.fun.lapse.LogicGen'
  generic: true
  hash: '%s.hashCode()'
  boxed: 'dyno.fun.lapse.LogicGen'
jni:
  translator: '::djinni_generated::NativeLogicGen'
  header: '"NativeLogicGen.hpp"'
  typename: jobject
  typeSignature: 'Ldyno/fun/lapse/LogicGen;'
---
name: lapse_moive_info_gen
typedef: 'interface +c'
params: []
prefix: lapse_
cpp:
  typename: '::lpase::MoiveInfoGen'
  header: '"moive_info_gen.hpp"'
  byValue: false
objc:
  typename: 'LPAMoiveInfoGen'
  pointer: true
  hash: '%s.hash'
  boxed: 'LPAMoiveInfoGen'
  header: '"LPAMoiveInfoGen.h"'
objcpp:
  translator: '::djinni_generated::MoiveInfoGen'
  header: '"LPAMoiveInfoGen+Private.h"'
java:
  reference: true
  typename: 'dyno.fun.lapse.MoiveInfoGen'
  generic: true
  hash: '%s.hashCode()'
  boxed: 'dyno.fun.lapse.MoiveInfoGen'
jni:
  translator: '::djinni_generated::NativeMoiveInfoGen'
  header: '"NativeMoiveInfoGen.hpp"'
  typename: jobject
  typeSignature: 'Ldyno/fun/lapse/MoiveInfoGen;'
---
name: lapse_moive_info_manager_gen
typedef: 'interface +c'
params: []
prefix: lapse_
cpp:
  typename: '::lpase::MoiveInfoManagerGen'
  header: '"moive_info_manager_gen.hpp"'
  byValue: false
objc:
  typename: 'LPAMoiveInfoManagerGen'
  pointer: true
  hash: '%s.hash'
  boxed: 'LPAMoiveInfoManagerGen'
  header: '"LPAMoiveInfoManagerGen.h"'
objcpp:
  translator: '::djinni_generated::MoiveInfoManagerGen'
  header: '"LPAMoiveInfoManagerGen+Private.h"'
java:
  reference: true
  typename: 'dyno.fun.lapse.MoiveInfoManagerGen'
  generic: true
  hash: '%s.hashCode()'
  boxed: 'dyno.fun.lapse.MoiveInfoManagerGen'
jni:
  translator: '::djinni_generated::NativeMoiveInfoManagerGen'
  header: '"NativeMoiveInfoManagerGen.hpp"'
  typename: jobject
  typeSignature: 'Ldyno/fun/lapse/MoiveInfoManagerGen;'
---
name: lapse_project_cell_gen
typedef: 'interface +c'
params: []
prefix: lapse_
cpp:
  typename: '::lpase::ProjectCellGen'
  header: '"project_cell_gen.hpp"'
  byValue: false
objc:
  typename: 'LPAProjectCellGen'
  pointer: true
  hash: '%s.hash'
  boxed: 'LPAProjectCellGen'
  header: '"LPAProjectCellGen.h"'
objcpp:
  translator: '::djinni_generated::ProjectCellGen'
  header: '"LPAProjectCellGen+Private.h"'
java:
  reference: true
  typename: 'dyno.fun.lapse.ProjectCellGen'
  generic: true
  hash: '%s.hashCode()'
  boxed: 'dyno.fun.lapse.ProjectCellGen'
jni:
  translator: '::djinni_generated::NativeProjectCellGen'
  header: '"NativeProjectCellGen.hpp"'
  typename: jobject
  typeSignature: 'Ldyno/fun/lapse/ProjectCellGen;'
---
name: lapse_project_list_gen
typedef: 'interface +c'
params: []
prefix: lapse_
cpp:
  typename: '::lpase::ProjectListGen'
  header: '"project_list_gen.hpp"'
  byValue: false
objc:
  typename: 'LPAProjectListGen'
  pointer: true
  hash: '%s.hash'
  boxed: 'LPAProjectListGen'
  header: '"LPAProjectListGen.h"'
objcpp:
  translator: '::djinni_generated::ProjectListGen'
  header: '"LPAProjectListGen+Private.h"'
java:
  reference: true
  typename: 'dyno.fun.lapse.ProjectListGen'
  generic: true
  hash: '%s.hashCode()'
  boxed: 'dyno.fun.lapse.ProjectListGen'
jni:
  translator: '::djinni_generated::NativeProjectListGen'
  header: '"NativeProjectListGen.hpp"'
  typename: jobject
  typeSignature: 'Ldyno/fun/lapse/ProjectListGen;'
---
name: lapse_publish_channel
typedef: 'enum'
params: []
prefix: lapse_
cpp:
  typename: '::lpase::PublishChannel'
  header: '"publish_channel.hpp"'
  byValue: true
objc:
  typename: 'LPAPublishChannel'
  pointer: false
  hash: '%s.hash'
  boxed: 'NSNumber'
  header: '"LPAPublishChannel.h"'
objcpp:
  translator: '::djinni::Enum<::lpase::PublishChannel, LPAPublishChannel>'
  header: '"DJIMarshal+Private.h"'
java:
  reference: true
  typename: 'dyno.fun.lapse.PublishChannel'
  generic: true
  hash: '%s.hashCode()'
  boxed: 'dyno.fun.lapse.PublishChannel'
jni:
  translator: '::djinni_generated::NativePublishChannel'
  header: '"NativePublishChannel.hpp"'
  typename: jobject
  typeSignature: 'Ldyno/fun/lapse/PublishChannel;'
---
name: lapse_quick_mode_gen
typedef: 'interface +c'
params: []
prefix: lapse_
cpp:
  typename: '::lpase::QuickModeGen'
  header: '"quick_mode_gen.hpp"'
  byValue: false
objc:
  typename: 'LPAQuickModeGen'
  pointer: true
  hash: '%s.hash'
  boxed: 'LPAQuickModeGen'
  header: '"LPAQuickModeGen.h"'
objcpp:
  translator: '::djinni_generated::QuickModeGen'
  header: '"LPAQuickModeGen+Private.h"'
java:
  reference: true
  typename: 'dyno.fun.lapse.QuickModeGen'
  generic: true
  hash: '%s.hashCode()'
  boxed: 'dyno.fun.lapse.QuickModeGen'
jni:
  translator: '::djinni_generated::NativeQuickModeGen'
  header: '"NativeQuickModeGen.hpp"'
  typename: jobject
  typeSignature: 'Ldyno/fun/lapse/QuickModeGen;'
---
name: lapse_video_info
typedef: 'record'
params: []
prefix: lapse_
cpp:
  typename: '::lpase::VideoInfo'
  header: '"video_info.hpp"'
  byValue: false
objc:
  typename: 'LPAVideoInfo'
  pointer: true
  hash: '%s.hash'
  boxed: 'LPAVideoInfo'
  header: '"LPAVideoInfo.h"'
objcpp:
  translator: '::djinni_generated::VideoInfo'
  header: '"LPAVideoInfo+Private.h"'
java:
  reference: true
  typename: 'dyno.fun.lapse.VideoInfo'
  generic: true
  hash: '%s.hashCode()'
  boxed: 'dyno.fun.lapse.VideoInfo'
jni:
  translator: '::djinni_generated::NativeVideoInfo'
  header: '"NativeVideoInfo.hpp"'
  typename: jobject
  typeSignature: 'Ldyno/fun/lapse/VideoInfo;'
