// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from lapse.djinni

#pragma once

#include <cstdint>
#include <memory>
#include <string>

namespace lpase {

class QuickModeGen;

class DataGen {
public:
    virtual ~DataGen() {}

    static std::shared_ptr<DataGen> instance();

    virtual bool initialize(const std::string & config) = 0;

    virtual std::string getProjectsDir() = 0;

    virtual std::string getCaptureMode() = 0;

    virtual void setCaptureMode(const std::string & mode) = 0;

    virtual int32_t getCaptureIntevalMillsec() = 0;

    virtual int32_t getCaptureInteval() = 0;

    virtual std::string getCaptureIntevalUnit() = 0;

    virtual void setCaptureInteval(int32_t value, const std::string & unit) = 0;

    virtual void setCaptureIntervalQuickMode(const std::string & mode) = 0;

    virtual std::string getCaptureIntervalQuickMode() = 0;

    virtual int32_t getFps() = 0;

    virtual int32_t getBitrate() = 0;

    virtual int32_t getResolution() = 0;

    virtual void setFps(int32_t fps) = 0;

    virtual void setBitrate(int32_t bitrate) = 0;

    virtual void setResolution(int32_t reso) = 0;

    virtual bool isCaptureModePhoto(int32_t interal) = 0;

    virtual bool isCaptureImmediate(int32_t interal) = 0;

    virtual int32_t getMaxFps() = 0;

    virtual int32_t getMinFps() = 0;

    virtual int32_t getMinInterval() = 0;

    virtual int32_t getMaxInterval() = 0;

    virtual int32_t getMinLapse() = 0;

    virtual int32_t getDefaultLapse() = 0;

    virtual int32_t getQuickModeCount() = 0;

    virtual std::shared_ptr<QuickModeGen> getQuickMode(int32_t index) = 0;

    virtual void selectQuickMode(int32_t index) = 0;

    virtual int32_t getCurrentQickMode() = 0;

    virtual int32_t getUiInfoUpdateRate() = 0;

    /** for message which is relevant to language  */
    virtual std::string getFpsRangeAlert() = 0;

    virtual std::string getLapseRangeAlert() = 0;

    virtual std::string getSlomoRangeAlert() = 0;
};

}  // namespace lpase
