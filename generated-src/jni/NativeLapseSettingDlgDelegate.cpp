// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from lapse.djinni

#include "NativeLapseSettingDlgDelegate.hpp"  // my header
#include "Marshal.hpp"
#include "NativeIntervalMode.hpp"

namespace djinni_generated {

NativeLapseSettingDlgDelegate::NativeLapseSettingDlgDelegate() : ::djinni::JniInterface<::lpase::LapseSettingDlgDelegate, NativeLapseSettingDlgDelegate>() {}

NativeLapseSettingDlgDelegate::~NativeLapseSettingDlgDelegate() = default;

NativeLapseSettingDlgDelegate::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

NativeLapseSettingDlgDelegate::JavaProxy::~JavaProxy() = default;

void NativeLapseSettingDlgDelegate::JavaProxy::updateSegMode(::lpase::IntervalMode c_mode) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeLapseSettingDlgDelegate>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_updateSegMode,
                           ::djinni::get(::djinni_generated::NativeIntervalMode::fromCpp(jniEnv, c_mode)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeLapseSettingDlgDelegate::JavaProxy::updateFps(int32_t c_fps) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeLapseSettingDlgDelegate>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_updateFps,
                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c_fps)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeLapseSettingDlgDelegate::JavaProxy::updateLapse(float c_lapse) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeLapseSettingDlgDelegate>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_updateLapse,
                           ::djinni::get(::djinni::F32::fromCpp(jniEnv, c_lapse)));
    ::djinni::jniExceptionCheck(jniEnv);
}
int32_t NativeLapseSettingDlgDelegate::JavaProxy::getFps() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeLapseSettingDlgDelegate>::get();
    auto jret = jniEnv->CallIntMethod(Handle::get().get(), data.method_getFps);
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::I32::toCpp(jniEnv, jret);
}
float NativeLapseSettingDlgDelegate::JavaProxy::getLapse() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeLapseSettingDlgDelegate>::get();
    auto jret = jniEnv->CallFloatMethod(Handle::get().get(), data.method_getLapse);
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::F32::toCpp(jniEnv, jret);
}

}  // namespace djinni_generated
