// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from lapse.djinni

#include "NativeLapseSettingUiGen.hpp"  // my header
#include "Marshal.hpp"

namespace djinni_generated {

NativeLapseSettingUiGen::NativeLapseSettingUiGen() : ::djinni::JniInterface<::lpase::LapseSettingUiGen, NativeLapseSettingUiGen>() {}

NativeLapseSettingUiGen::~NativeLapseSettingUiGen() = default;

NativeLapseSettingUiGen::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

NativeLapseSettingUiGen::JavaProxy::~JavaProxy() = default;

void NativeLapseSettingUiGen::JavaProxy::initializeSliberFps(int32_t c_min, int32_t c_max) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeLapseSettingUiGen>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_initializeSliberFps,
                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c_min)),
                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c_max)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeLapseSettingUiGen::JavaProxy::initializeSliberLapse(int32_t c_min, int32_t c_max) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeLapseSettingUiGen>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_initializeSliberLapse,
                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c_min)),
                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c_max)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeLapseSettingUiGen::JavaProxy::updateFps(int32_t c_fps) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeLapseSettingUiGen>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_updateFps,
                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c_fps)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeLapseSettingUiGen::JavaProxy::updateLapse(int32_t c_lapse) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeLapseSettingUiGen>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_updateLapse,
                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c_lapse)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeLapseSettingUiGen::JavaProxy::updatePicker(int32_t c_index) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeLapseSettingUiGen>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_updatePicker,
                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c_index)));
    ::djinni::jniExceptionCheck(jniEnv);
}

}  // namespace djinni_generated
